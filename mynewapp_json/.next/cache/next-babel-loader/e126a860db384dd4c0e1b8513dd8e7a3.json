{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Saksham\\\\mynewapp\\\\mynewapp\\\\pages\\\\testjsonserver.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport jwt from 'jsonwebtoken';\n\nvar Login = function Login() {\n  _s();\n\n  var _useState = useState(\"\"),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"You are not logged in\"),\n      message = _useState3[0],\n      setMessage = _useState3[1];\n\n  var router = useRouter();\n\n  function submitForm(_x) {\n    return _submitForm.apply(this, arguments);\n  }\n\n  function _submitForm() {\n    _submitForm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res, token, json;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return fetch(\"/api/testjsonapi\", {\n                method: 'POST',\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                  name: name,\n                  password: password\n                })\n              }).then(function (t) {\n                return t.json();\n              });\n\n            case 3:\n              res = _context.sent;\n              token = res.token;\n\n              if (token) {\n                json = jwt.decode(token);\n                setMessage(\"You are now logged in \".concat(json.name, \" and as a \").concat(json.admin ? 'admin' : 'user'));\n              } else {\n                setMessage('No User found with this name. Please Sign Up.');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _submitForm.apply(this, arguments);\n  }\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, message), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"LOGIN\"), __jsx(\"form\", {\n    method: \"POST\",\n    action: \"/api/login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"name\",\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }\n  }), __jsx(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    onClick: function onClick(e) {\n      return submitForm(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"login\")));\n};\n\n_s(Login, \"0OgXZDDQ4OnG8ackTKtfwiIN+sE=\", false, function () {\n  return [useRouter];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Saksham/mynewapp/mynewapp/pages/testjsonserver.js"],"names":["Link","useState","useRouter","jwt","Login","name","setName","password","setPassword","message","setMessage","router","submitForm","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","t","json","res","token","decode","admin","target","value"],"mappings":"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","sourcesContent":["import Link from 'next/link'\r\nimport {useState} from 'react'\r\nimport {useRouter} from 'next/router'\r\nimport jwt from 'jsonwebtoken';\r\n\r\nconst Login = ()=>{\r\n  const [name,setName] = useState(\"\");\r\n  const [password,setPassword] = useState(\"\");\r\n  const [message,setMessage] = useState(\"You are not logged in\");\r\n   const router  = useRouter();\r\n    \r\n   async function submitForm(e){\r\n       e.preventDefault();\r\n       const res= await fetch(\"/api/testjsonapi\",{\r\n            method: 'POST',\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({name, password}),\r\n        }).then(t=>t.json());\r\n        const token =res.token;\r\n        if(token){\r\n            const json = jwt.decode(token);\r\n            setMessage(`You are now logged in ${json.name} and as a ${json.admin ? 'admin': 'user'}`);\r\n        }else{\r\n            setMessage('No User found with this name. Please Sign Up.');\r\n        }\r\n   }\r\n    return(\r\n      <div>\r\n          <h1>{message}</h1>\r\n        <h3>LOGIN</h3>\r\n        <form method=\"POST\" action=\"/api/login\">\r\n           <input type=\"text\" name=\"name\" placeholder=\"name\" value={name}\r\n            onChange={(e)=>setName(e.target.value)}\r\n            />\r\n            <input name=\"password\" type=\"password\" placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e)=>setPassword(e.target.value)}\r\n            />\r\n            <button type=\"submit\" onClick={(e)=>submitForm(e)}>login</button>\r\n            {/* <Link href=\"/signup\"><a><h5>Don't have a account ?</h5></a></Link> */}\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Login"]},"metadata":{},"sourceType":"module"}